{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Project/ReactDoc/nlp_frontend/src/pages/Master/Mahasiswa.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport MaterialTable from 'material-table';\nimport Paper from '@material-ui/core/Paper';\nimport { Wrapper } from '../../components';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000'\n});\n\nfunction Mahasiswa() {\n  const [state, setState] = useState([]); //for error handling\n\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  const refreshTable = () => {\n    const fetchData = async () => {\n      const result = await api.get('mahasiswa_all');\n      setState(result.data);\n    };\n\n    fetchData();\n  };\n\n  useEffect(() => {\n    refreshTable();\n  }, []); //Operation Add\n\n  const handleRowAdd = (newData, resolve) => {\n    let errorList = [];\n\n    if (newData.stambuk === undefined) {\n      errorList.push(\"Harap Isi Stambuk\");\n    }\n\n    if (newData.nama === undefined) {\n      errorList.push(\"Harap Isi Nama\");\n    }\n\n    if (newData.alamat === undefined) {\n      errorList.push(\"Harap Isi Alamat\");\n    }\n\n    if (errorList.length < 1) {\n      api.post(\"mahasiswa_add\", newData).then(res => {\n        let dataToAdd = state;\n        dataToAdd.push(newData);\n        setState(dataToAdd);\n        resolve();\n        setErrorMessages([]);\n        setIserror(false);\n        refreshTable();\n      }).catch(error => {\n        setErrorMessages([\"Cannot add data. Server error!\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    //validation\n    let errorList = [];\n\n    if (newData.stambuk === undefined) {\n      errorList.push(\"Harap Isi Stambuk\");\n    }\n\n    if (newData.nama === undefined) {\n      errorList.push(\"Harap Isi Nama\");\n    }\n\n    if (newData.alamat === undefined) {\n      errorList.push(\"Harap Isi Alamat\");\n    }\n\n    if (errorList.length < 1) {\n      api.patch(\"/mahasiswa_operation/\" + newData.id, newData).then(res => {\n        const dataUpdate = [...state];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData;\n        setState([...dataUpdate]);\n        resolve();\n        setIserror(false);\n        setErrorMessages([]);\n        refreshTable();\n      }).catch(error => {\n        setErrorMessages([\"Update failed! Server error\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    api.delete('mahasiswa_operation/' + oldData.id).then(res => {\n      const dataDelete = [...state];\n      const index = oldData.tableData.id;\n      dataDelete.splice(index, 1);\n      setState([...dataDelete]);\n      resolve();\n      refreshTable();\n    }).catch(error => {\n      setErrorMessages([\"Delete failed! Server error\"]);\n      setIserror(true);\n      resolve();\n    });\n  };\n\n  var columns = [{\n    title: 'Stambuk',\n    field: 'stambuk'\n  }, {\n    title: 'Nama',\n    field: 'nama'\n  } // {\n  //   title: 'Birth Place',\n  //   field: 'birthCity',\n  //   lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n  // },\n  ];\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Data Mahasiswa\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, iserror && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, errorMessages.map((msg, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 34\n      }\n    }, msg);\n  }))), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Tabel Mahasiswa\",\n    columns: columns,\n    data: state,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          handleRowAdd(newData, resolve);\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          handleRowUpdate(newData, oldData, resolve);\n          resolve(); // if (oldData) {\n          //   setState((prevState) => {\n          //     const data = [...prevState.data];\n          //     data[data.indexOf(oldData)] = newData;\n          //     return { ...prevState, data };\n          //   });\n          // }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            handleRowDelete(oldData, resolve);\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default Mahasiswa;","map":{"version":3,"sources":["/Users/mac/Documents/Project/ReactDoc/nlp_frontend/src/pages/Master/Mahasiswa.js"],"names":["React","useRef","useState","useEffect","Card","CardContent","withStyles","Divider","Grid","MaterialTable","Paper","Wrapper","axios","Alert","api","create","baseURL","Mahasiswa","state","setState","iserror","setIserror","errorMessages","setErrorMessages","refreshTable","fetchData","result","get","data","handleRowAdd","newData","resolve","errorList","stambuk","undefined","push","nama","alamat","length","post","then","res","dataToAdd","catch","error","handleRowUpdate","oldData","patch","id","dataUpdate","index","tableData","handleRowDelete","delete","dataDelete","splice","columns","title","field","map","msg","i","onRowAdd","Promise","setTimeout","onRowUpdate","onRowDelete","prevState"],"mappings":"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","sourcesContent":["import React ,{ useRef, useState , useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles  } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport MaterialTable from 'material-table';\nimport Paper from '@material-ui/core/Paper';\nimport { Wrapper } from '../../components';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8000'\n});\n\n\nfunction Mahasiswa(){\n  const [state, setState] = useState([]);\n  //for error handling\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  const refreshTable = () => {\n    const fetchData = async () => {\n      const result = await api.get('mahasiswa_all')\n      setState(result.data);\n    };\n    fetchData();\n  }\n  useEffect(() => {\n    refreshTable();\n  }, []);\n\n\n  //Operation Add\n\n  const handleRowAdd = (newData,resolve) => {\n    let errorList = [];\n    if(newData.stambuk === undefined){\n      errorList.push(\"Harap Isi Stambuk\");\n    }\n    if(newData.nama === undefined){\n      errorList.push(\"Harap Isi Nama\");\n    }\n    if(newData.alamat === undefined){\n      errorList.push(\"Harap Isi Alamat\");\n    }\n\n    if(errorList.length < 1){\n        api.post(\"mahasiswa_add\",newData).\n        then(res => {\n          let dataToAdd = state;\n          dataToAdd.push(newData);\n          setState(dataToAdd);\n          resolve()\n          setErrorMessages([])\n          setIserror(false)\n          refreshTable();\n        })\n        .catch(error => {\n          setErrorMessages([\"Cannot add data. Server error!\"])\n          setIserror(true)\n          resolve()\n        })\n      }else{\n        setErrorMessages(errorList)\n        setIserror(true)\n        resolve()\n      }\n    }\n\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n      //validation\n      let errorList = []\n      if(newData.stambuk === undefined){\n        errorList.push(\"Harap Isi Stambuk\");\n      }\n      if(newData.nama === undefined){\n        errorList.push(\"Harap Isi Nama\");\n      }\n      if(newData.alamat === undefined){\n        errorList.push(\"Harap Isi Alamat\");\n      }\n\n      if(errorList.length < 1){\n        api.patch(\"/mahasiswa_operation/\"+newData.id, newData)\n        .then(res => {\n          const dataUpdate = [...state];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setState([...dataUpdate]);\n          resolve()\n          setIserror(false)\n          setErrorMessages([])\n          refreshTable();\n        })\n        .catch(error => {\n          setErrorMessages([\"Update failed! Server error\"])\n          setIserror(true)\n          resolve()\n\n        })\n      }else{\n        setErrorMessages(errorList)\n        setIserror(true)\n        resolve()\n      }\n\n    }\n  const handleRowDelete = (oldData, resolve) => {\n    api.delete('mahasiswa_operation/'+oldData.id)\n    .then(res => {\n      const dataDelete = [...state];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setState([...dataDelete]);\n        resolve()\n        refreshTable();\n      })\n      .catch(error => {\n        setErrorMessages([\"Delete failed! Server error\"])\n        setIserror(true)\n        resolve()\n      })\n  }\n\n  var columns = [\n    { title: 'Stambuk', field: 'stambuk' },\n    { title: 'Nama', field: 'nama' },\n    // {\n    //   title: 'Birth Place',\n    //   field: 'birthCity',\n    //   lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n    // },\n  ];\n\n  return(\n    <Wrapper>\n      <Card>\n          <CardContent>\n              <h3>Data Mahasiswa</h3>\n              <div>\n                {iserror &&\n                  <Alert severity=\"error\">\n                      {errorMessages.map((msg, i) => {\n                          return <div key={i}>{msg}</div>\n                      })}\n                  </Alert>\n                }\n              </div>\n              <MaterialTable\n              title=\"Tabel Mahasiswa\"\n              columns={columns}\n              data={state}\n              editable={{\n                onRowAdd: (newData) =>\n                  new Promise((resolve) => {\n\n                    setTimeout(() => {\n                      handleRowAdd(newData, resolve)\n\n                    }, 600);\n                  }),\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      handleRowUpdate(newData, oldData, resolve)\n                      resolve();\n                      // if (oldData) {\n                      //   setState((prevState) => {\n                      //     const data = [...prevState.data];\n                      //     data[data.indexOf(oldData)] = newData;\n                      //     return { ...prevState, data };\n                      //   });\n                      // }\n                    }, 600);\n                  }),\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      setState((prevState) => {\n                        handleRowDelete(oldData, resolve)\n                      });\n                    }, 600);\n                  }),\n                }\n              }\n            />\n          </CardContent>\n      </Card>\n    </Wrapper>\n  );\n}\n\nexport default Mahasiswa;\n"]},"metadata":{},"sourceType":"module"}